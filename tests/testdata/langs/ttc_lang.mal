// vim:ft=mal
#id: "test"
#version: "0.0.0"

category TestAssets{
    asset Network {

        | easyAccess
            -> toNets.easyAccess,
               toNets.hardAccess,
               computers.easyConnect,
               computers.hardConnect


        | hardAccess [VeryHardAndCertain]
            -> toNets.easyAccess,
               toNets.hardAccess,
               computers.easyConnect,
               computers.hardConnect
    }

    asset Computer {

        | access
            -> datas.easyRead,
               datas.hardRead,
               networks.easyAccess,
               networks.hardAccess

        | easyConnect
            -> softwares.easyScan,
               softwares.hardScan,
               users.easyAssume,
               users.hardAssume
        | hardConnect [VeryHardAndCertain]
            -> softwares.easyScan,
               softwares.hardScan,
               users.easyAssume,
               users.hardAssume
    }

    asset Software {

        | easyAccess
            -> computer.access
        | hardAccess [VeryHardAndCertain]
            -> computer.access
        & easyScan
            -> vulns.easyExploit,
               vulns.hardExploit
        & hardScan [VeryHardAndCertain]
            -> vulns.easyExploit,
               vulns.hardExploit
    }

    asset User {

        | easyAssume
            -> computer.access

        | hardAssume [VeryHardAndCertain]
            -> computer.access
    }

    asset SoftwareVuln {

        & easyExploit
            -> software.easyAccess,
               software.hardAccess
        & hardExploit [VeryHardAndCertain]
            -> software.easyAccess,
               software.hardAccess
    }

    asset Data {

        & easyRead
            -> read
        & hardRead [VeryHardAndCertain]
            -> read
        | read
    }
}

associations {
  Network       [fromNets] *    <-- NetToNet -->                * [toNets] Network
  Network       [networks] *    <-- NetToComputers -->          * [computers] Computer
  Software      [softwares] *   <-- SoftwareOnComputer -->      1 [computer] Computer
  User          [users] *       <-- UserOnComputer -->          1 [computer] Computer
  SoftwareVuln  [vulns] *       <-- VulnOnSoftware -->          1 [software] Software
  Data          [datas] *       <-- DataOnComputer -->          1 [computer] Computer
}
