# A scenario that will run the same simulation as run_demo.py
# in the malsim CLI with `malsim run_demo_scenario.yml`

lang_file: ../langs/org.mal-lang.coreLang-1.0.0.mar
model_file: ../models/run_demo_model.json

# Rewards for each attack step (same as in run_demo.py)
rewards:
  by_asset_name:
    OS App:
      notPresent: 50
      supplyChainAuditing: 1000000000
      fullAccess: 100
    Program 1:
      notPresent: 30
      supplyChainAuditing: 1000000000
      fullAccess: 50
    SoftwareVulnerability:2:
      notPresent: 40
    Data:3:
      notPresent: 20
    Credentials:4:
      notPhishable: 1000000000
    Identity:5:
      notPresent: 35
      assume: 50
    ConnectionRule:6:
      restricted: 40
      payloadInspection: 30
    Other OS App:
      notPresent: 50
      supplyChainAuditing: 1000000000
      fullAccess: 200

agents:
  'Attacker1':
    agent_class: BreadthFirstAttacker
    type: attacker
    entry_points:
      - 'OS App:networkConnectUninspected'

  'Defender1':
    agent_class: KeyboardAgent
    type: defender
